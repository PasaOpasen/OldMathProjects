theme_bw()
p1 <- ggarrange(pl1, pl2,pl3,pl4,
ncol = 2, nrow = 2)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(ppp,p1, p2, ncol = 1, nrow = 3,heights=c(1.3,2,3))
}
getimage(3)
####################################Задание 2
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red",main = "Суммы внутригрупповых расстояний при разном числе кластеров")
#функция, проводящая некоторый анализ и строящая графики для заданного числа кластеров
getimage=function(k){
fit=kmeans(data[,2:5],k)#строится модель
cat("Внутригрупповые суммы:",fit$withinss,"\n")#внутригрупповые суммы
cat("Общая сумма:", fit$betweenss,"\n")
cat("Матрица расстояний:\n")
print(dist(fit$centers))#матрица расстояний
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(data)%>%mutate(cluster=factor(fit$cluster))
summary(aov(cluster~Costs+Doctors+GDP+Deaths),newdata)
#агрегирование данных по группам
means=newdata[,2:6]%>%group_by(cluster)%>%summarise(
meanCosts=mean(Costs),sdCosts=sd(Costs),
meanDoctors=mean(Doctors),sdDoctors=sd(Doctors),
meanGDP=mean(GDP),sdGDP=sd(GDP),
meanDeaths=mean(Deaths),sdDeaths=sd(Deaths)
)
print(means)
means=means[,c(1,2,4,6,8)]#берётся сабсет только из значений для средних
lbs=c("cluster1","cluster2","cluster3","cluster4","cluster5")
library(ggplot2)
library(ggpubr)
#здесь создаётся таблица со средними по каждой переменной и каждому классу в том виде, в каком удобней рисовать
tmpdata=data.frame(x=1:4,means=as.numeric(means[1,2:5]),cluster=rep(lbs[1],4))
for(i in 2:k){
tmpdata=rbind(tmpdata,data.frame(x=1:4,means=as.numeric(means[i,2:5]),cluster=rep(lbs[i],4)))
}
tmpdata$cluster=factor(tmpdata$cluster)
ppp=ggplot(tmpdata,aes(x=x,y=means,col=cluster))+
geom_line()+
geom_point(size=4)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl3=ggplot(newdata, aes(x=GDP, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl4=ggplot(newdata, aes(x=GDP, y=Doctors, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,pl3,pl4,
ncol = 2, nrow = 2)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(ppp,p1, p2, ncol = 1, nrow = 3,heights=c(1.3,2,3))
}
getimage(3)
####################################Задание 2
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red",main = "Суммы внутригрупповых расстояний при разном числе кластеров")
#функция, проводящая некоторый анализ и строящая графики для заданного числа кластеров
getimage=function(k){
fit=kmeans(data[,2:5],k)#строится модель
cat("Внутригрупповые суммы:",fit$withinss,"\n")#внутригрупповые суммы
cat("Общая сумма:", fit$betweenss,"\n")
cat("Матрица расстояний:\n")
print(dist(fit$centers))#матрица расстояний
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(data)%>%mutate(cluster=factor(fit$cluster))
summary(aov(Costs~cluster),newdata)
#агрегирование данных по группам
means=newdata[,2:6]%>%group_by(cluster)%>%summarise(
meanCosts=mean(Costs),sdCosts=sd(Costs),
meanDoctors=mean(Doctors),sdDoctors=sd(Doctors),
meanGDP=mean(GDP),sdGDP=sd(GDP),
meanDeaths=mean(Deaths),sdDeaths=sd(Deaths)
)
print(means)
means=means[,c(1,2,4,6,8)]#берётся сабсет только из значений для средних
lbs=c("cluster1","cluster2","cluster3","cluster4","cluster5")
library(ggplot2)
library(ggpubr)
#здесь создаётся таблица со средними по каждой переменной и каждому классу в том виде, в каком удобней рисовать
tmpdata=data.frame(x=1:4,means=as.numeric(means[1,2:5]),cluster=rep(lbs[1],4))
for(i in 2:k){
tmpdata=rbind(tmpdata,data.frame(x=1:4,means=as.numeric(means[i,2:5]),cluster=rep(lbs[i],4)))
}
tmpdata$cluster=factor(tmpdata$cluster)
ppp=ggplot(tmpdata,aes(x=x,y=means,col=cluster))+
geom_line()+
geom_point(size=4)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl3=ggplot(newdata, aes(x=GDP, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl4=ggplot(newdata, aes(x=GDP, y=Doctors, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,pl3,pl4,
ncol = 2, nrow = 2)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(ppp,p1, p2, ncol = 1, nrow = 3,heights=c(1.3,2,3))
}
getimage(3)
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red",main = "Суммы внутригрупповых расстояний при разном числе кластеров")
#функция, проводящая некоторый анализ и строящая графики для заданного числа кластеров
getimage=function(k){
fit=kmeans(data[,2:5],k)#строится модель
cat("Внутригрупповые суммы:",fit$withinss,"\n")#внутригрупповые суммы
cat("Общая сумма:", fit$betweenss,"\n")
cat("Матрица расстояний:\n")
print(dist(fit$centers))#матрица расстояний
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(data)%>%mutate(cluster=factor(fit$cluster))
summary(aov(Costs~cluster,newdata))
#агрегирование данных по группам
means=newdata[,2:6]%>%group_by(cluster)%>%summarise(
meanCosts=mean(Costs),sdCosts=sd(Costs),
meanDoctors=mean(Doctors),sdDoctors=sd(Doctors),
meanGDP=mean(GDP),sdGDP=sd(GDP),
meanDeaths=mean(Deaths),sdDeaths=sd(Deaths)
)
print(means)
means=means[,c(1,2,4,6,8)]#берётся сабсет только из значений для средних
lbs=c("cluster1","cluster2","cluster3","cluster4","cluster5")
library(ggplot2)
library(ggpubr)
#здесь создаётся таблица со средними по каждой переменной и каждому классу в том виде, в каком удобней рисовать
tmpdata=data.frame(x=1:4,means=as.numeric(means[1,2:5]),cluster=rep(lbs[1],4))
for(i in 2:k){
tmpdata=rbind(tmpdata,data.frame(x=1:4,means=as.numeric(means[i,2:5]),cluster=rep(lbs[i],4)))
}
tmpdata$cluster=factor(tmpdata$cluster)
ppp=ggplot(tmpdata,aes(x=x,y=means,col=cluster))+
geom_line()+
geom_point(size=4)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl3=ggplot(newdata, aes(x=GDP, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl4=ggplot(newdata, aes(x=GDP, y=Doctors, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,pl3,pl4,
ncol = 2, nrow = 2)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(ppp,p1, p2, ncol = 1, nrow = 3,heights=c(1.3,2,3))
}
getimage(3)
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red",main = "Суммы внутригрупповых расстояний при разном числе кластеров")
#функция, проводящая некоторый анализ и строящая графики для заданного числа кластеров
getimage=function(k){
fit=kmeans(data[,2:5],k)#строится модель
cat("Внутригрупповые суммы:",fit$withinss,"\n")#внутригрупповые суммы
cat("Общая сумма:", fit$betweenss,"\n")
cat("Матрица расстояний:\n")
print(dist(fit$centers))#матрица расстояний
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(data)%>%mutate(cluster=factor(fit$cluster))
print(summary(aov(Costs~cluster,newdata)))
#агрегирование данных по группам
means=newdata[,2:6]%>%group_by(cluster)%>%summarise(
meanCosts=mean(Costs),sdCosts=sd(Costs),
meanDoctors=mean(Doctors),sdDoctors=sd(Doctors),
meanGDP=mean(GDP),sdGDP=sd(GDP),
meanDeaths=mean(Deaths),sdDeaths=sd(Deaths)
)
print(means)
means=means[,c(1,2,4,6,8)]#берётся сабсет только из значений для средних
lbs=c("cluster1","cluster2","cluster3","cluster4","cluster5")
library(ggplot2)
library(ggpubr)
#здесь создаётся таблица со средними по каждой переменной и каждому классу в том виде, в каком удобней рисовать
tmpdata=data.frame(x=1:4,means=as.numeric(means[1,2:5]),cluster=rep(lbs[1],4))
for(i in 2:k){
tmpdata=rbind(tmpdata,data.frame(x=1:4,means=as.numeric(means[i,2:5]),cluster=rep(lbs[i],4)))
}
tmpdata$cluster=factor(tmpdata$cluster)
ppp=ggplot(tmpdata,aes(x=x,y=means,col=cluster))+
geom_line()+
geom_point(size=4)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl3=ggplot(newdata, aes(x=GDP, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl4=ggplot(newdata, aes(x=GDP, y=Doctors, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,pl3,pl4,
ncol = 2, nrow = 2)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(ppp,p1, p2, ncol = 1, nrow = 3,heights=c(1.3,2,3))
}
getimage(3)
install.packages("cluster")
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red",main = "Суммы внутригрупповых расстояний при разном числе кластеров")
#функция, проводящая некоторый анализ и строящая графики для заданного числа кластеров
getimage=function(k){
fit=kmeans(data[,2:5],k)#строится модель
cat("Внутригрупповые суммы:",fit$withinss,"\n")#внутригрупповые суммы
cat("Общая сумма:", fit$betweenss,"\n")
cat("Матрица расстояний:\n")
#print(dist(fit$centers))#матрица расстояний
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(data)%>%mutate(cluster=factor(fit$cluster))
#print(summary(aov(Costs~cluster,newdata)))
library(cluster) clusplot(newdata, newdata$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
#агрегирование данных по группам
means=newdata[,2:6]%>%group_by(cluster)%>%summarise(
meanCosts=mean(Costs),sdCosts=sd(Costs),
meanDoctors=mean(Doctors),sdDoctors=sd(Doctors),
meanGDP=mean(GDP),sdGDP=sd(GDP),
meanDeaths=mean(Deaths),sdDeaths=sd(Deaths)
)
print(means)
means=means[,c(1,2,4,6,8)]#берётся сабсет только из значений для средних
lbs=c("cluster1","cluster2","cluster3","cluster4","cluster5")
library(ggplot2)
library(ggpubr)
#здесь создаётся таблица со средними по каждой переменной и каждому классу в том виде, в каком удобней рисовать
tmpdata=data.frame(x=1:4,means=as.numeric(means[1,2:5]),cluster=rep(lbs[1],4))
for(i in 2:k){
tmpdata=rbind(tmpdata,data.frame(x=1:4,means=as.numeric(means[i,2:5]),cluster=rep(lbs[i],4)))
}
tmpdata$cluster=factor(tmpdata$cluster)
ppp=ggplot(tmpdata,aes(x=x,y=means,col=cluster))+
geom_line()+
geom_point(size=4)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl3=ggplot(newdata, aes(x=GDP, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl4=ggplot(newdata, aes(x=GDP, y=Doctors, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,pl3,pl4,
ncol = 2, nrow = 2)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(ppp,p1, p2, ncol = 1, nrow = 3,heights=c(1.3,2,3))
}
getimage(3)
#номер варианта
nv=7
#чтение данных и чистка
library(readxl)
datacrude =data.frame(read_excel("Таблица 1.xlsx")) #считывание таблицы
data=datacrude[5:nrow(datacrude),-1]#удаление лишних строк и столбцов
data=data[-nv,]#удаление строки в соответствиии с номером варианта
colnames(data)=c("Country","Doctors","Deaths","GDP","Costs")#переименование столбцов
data[,2:5]=apply(data[,2:5],2,function(x)scale(as.numeric(x)))#тут переменные из текста преобразуются в числа и стандартизируются
data[,1]=factor(data[,1])#первая переменная из количественной преобразуется в номенативную
#####################################Задание 1
d = dist(data[,2:5], method = "euclidean")#матрица расстояний
fit <- hclust(d, method = "ward.D")
plot(fit, labels = data$Country,xlab = "Countries")
plot(fit$height, xlab = "step",ylab="dist",type="b",col="blue",lwd=1,main="Расстояния при объединении кластеров")
mat=fit$merge
resu=list()
countries=as.character(data$Country)
for(i in 1:nrow(mat)){
if(mat[i,1]<0){
a=countries[-mat[i,1]]
}else{
a=as.character(resu[[mat[i,1]]])
}
if(mat[i,2]<0){
b=countries[-mat[i,2]]
}else{
b=as.character(resu[[mat[i,2]]])
}
resu[[i]]=c(a,b)
}
names(resu)=paste("Шаг",1:nrow(mat),"расстояние", fit$height)
print(resu)
####################################Задание 2
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red",main = "Суммы внутригрупповых расстояний при разном числе кластеров")
#функция, проводящая некоторый анализ и строящая графики для заданного числа кластеров
getimage=function(k){
fit=kmeans(data[,2:5],k)#строится модель
cat("Внутригрупповые суммы:",fit$withinss,"\n")#внутригрупповые суммы
cat("Общая сумма:", fit$betweenss,"\n")
cat("Матрица расстояний:\n")
#print(dist(fit$centers))#матрица расстояний
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(data)%>%mutate(cluster=factor(fit$cluster))
#print(summary(aov(Costs~cluster,newdata)))
library(cluster) clusplot(newdata, newdata$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
#агрегирование данных по группам
means=newdata[,2:6]%>%group_by(cluster)%>%summarise(
meanCosts=mean(Costs),sdCosts=sd(Costs),
meanDoctors=mean(Doctors),sdDoctors=sd(Doctors),
meanGDP=mean(GDP),sdGDP=sd(GDP),
meanDeaths=mean(Deaths),sdDeaths=sd(Deaths)
)
print(means)
means=means[,c(1,2,4,6,8)]#берётся сабсет только из значений для средних
lbs=c("cluster1","cluster2","cluster3","cluster4","cluster5")
library(ggplot2)
library(ggpubr)
#здесь создаётся таблица со средними по каждой переменной и каждому классу в том виде, в каком удобней рисовать
tmpdata=data.frame(x=1:4,means=as.numeric(means[1,2:5]),cluster=rep(lbs[1],4))
for(i in 2:k){
tmpdata=rbind(tmpdata,data.frame(x=1:4,means=as.numeric(means[i,2:5]),cluster=rep(lbs[i],4)))
}
tmpdata$cluster=factor(tmpdata$cluster)
ppp=ggplot(tmpdata,aes(x=x,y=means,col=cluster))+
geom_line()+
geom_point(size=4)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl3=ggplot(newdata, aes(x=GDP, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl4=ggplot(newdata, aes(x=GDP, y=Doctors, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,pl3,pl4,
ncol = 2, nrow = 2)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(ppp,p1, p2, ncol = 1, nrow = 3,heights=c(1.3,2,3))
}
getimage(3)
####################################Задание 2
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red",main = "Суммы внутригрупповых расстояний при разном числе кластеров")
#функция, проводящая некоторый анализ и строящая графики для заданного числа кластеров
getimage=function(k){
fit=kmeans(data[,2:5],k)#строится модель
cat("Внутригрупповые суммы:",fit$withinss,"\n")#внутригрупповые суммы
cat("Общая сумма:", fit$betweenss,"\n")
cat("Матрица расстояний:\n")
#print(dist(fit$centers))#матрица расстояний
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(data)%>%mutate(cluster=factor(fit$cluster))
#print(summary(aov(Costs~cluster,newdata)))
library(cluster)
clusplot(newdata, newdata$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
#агрегирование данных по группам
means=newdata[,2:6]%>%group_by(cluster)%>%summarise(
meanCosts=mean(Costs),sdCosts=sd(Costs),
meanDoctors=mean(Doctors),sdDoctors=sd(Doctors),
meanGDP=mean(GDP),sdGDP=sd(GDP),
meanDeaths=mean(Deaths),sdDeaths=sd(Deaths)
)
print(means)
means=means[,c(1,2,4,6,8)]#берётся сабсет только из значений для средних
lbs=c("cluster1","cluster2","cluster3","cluster4","cluster5")
library(ggplot2)
library(ggpubr)
#здесь создаётся таблица со средними по каждой переменной и каждому классу в том виде, в каком удобней рисовать
tmpdata=data.frame(x=1:4,means=as.numeric(means[1,2:5]),cluster=rep(lbs[1],4))
for(i in 2:k){
tmpdata=rbind(tmpdata,data.frame(x=1:4,means=as.numeric(means[i,2:5]),cluster=rep(lbs[i],4)))
}
tmpdata$cluster=factor(tmpdata$cluster)
ppp=ggplot(tmpdata,aes(x=x,y=means,col=cluster))+
geom_line()+
geom_point(size=4)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl3=ggplot(newdata, aes(x=GDP, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl4=ggplot(newdata, aes(x=GDP, y=Doctors, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,pl3,pl4,
ncol = 2, nrow = 2)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(ppp,p1, p2, ncol = 1, nrow = 3,heights=c(1.3,2,3))
}
getimage(3)
