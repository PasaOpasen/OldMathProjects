df=data.frame(x=x,y=y[,2])
ns=rownames(y)
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
mt=lm(y~x,df,na.rm = TRUE)
summary(mt)
x=x[!is.na(df$y)]
res=mt$residuals[!is.na(df$y)]
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
library(corrplot)
nn=20
for(i in seq(length(x)-80,length(x)-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",ns[tmp],"\n")
data=y[tmp,]#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=cormatrix[lower.tri(cormatrix)]
cat("Статистика треугольнику корреляционной матрицы \n")
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
#Вариант 7
p1 = nchar("Дмитрий")
p2 = nchar("Пасько")
#Задание 1
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
library(dplyr)
tib=data_frame(tab)[[1]]
# по городам
tb=tib%>%select(Price,Year,City)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
ms=matrix(tb$mean,nrow=length(levels(tb$Year)))
ms= data.frame(ms)
colnames(ms)=levels(tb$City)
rownames(ms)=levels(tb$Year)
# по районам
tb=tib%>%select(Price,Year,Distrinct)%>%group_by(Year,Distrinct)%>%
summarise(mean=mean(Price))
ms=matrix(tb$mean,nrow=length(levels(tb$Year)))
ms= data.frame(ms)
colnames(ms)=levels(tb$Distrinct)
rownames(ms)=levels(tb$Year)
# по стране
tb=tib%>%select(Price,Year)%>%group_by(Year)%>%
summarise(mean=mean(Price))
ms=matrix(tb$mean,nrow=length(levels(tb$Year)))
ms= data.frame(ms)
colnames(ms)=c("mean")
rownames(ms)=levels(tb$Year)
library(ggplot2)
df=data.frame(time=as.numeric(levels(tb$Year)),price=ms$mean)
ggplot(df,
aes(time,price))+
geom_point(size=3)+
geom_smooth(method = lm,se=F)+
geom_smooth(method =loess,col="red")
price1 = c(
40 + p1,43 + p1,40,80,
74,40 + p2,55 + p2,42 + p2,
42,50,40 + p2,43,43,
35 + p1,40 + p1,30,36 + p1,
50,30 + p1,29,45 + p1,
40,42,40,36,
50,30 + p1,24 + p2,
25 + p2,40,32 + p1,
30,20,30,25,32 + p2
)
summary(price1)#минимальные характеристики
t.test(price1)#тест Стьюдента для среднего
vart=sd(price1)/mean(price1)*100
cat("Коэффициент вариации равен",vart,"%\n")
#так как коэффициент вариации < 30%, выборка достаточно однородная
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
ns=rownames(y)
x=sapply(x, function(s) as.numeric(substr(s,2,length(s))))
x=sapply(x, function(s) as.numeric(substr(s,2,nchar(s))))
x=as.numeric(substr(x,2,nchar(x)))
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
#Задание 4
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
ns=rownames(y)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
mt=lm(y~x,df,na.rm = TRUE)
summary(mt)
x=x[!is.na(df$y)]
res=mt$residuals[!is.na(df$y)]
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
library(corrplot)
nn=20
for(i in seq(length(x)-80,length(x)-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",x[tmp],"\n")
data=y[tmp,]#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=cormatrix[lower.tri(cormatrix)]
cat("Статистика треугольнику корреляционной матрицы \n")
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
#Задание 4
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
ns=rownames(y)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
library(mice)
imp=mice(df,seed=11)
imp
#Задание 4
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
ns=rownames(y)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
library(mice)
imp=mice(df,seed=11)
df=complete(imp,action = 2)
View(df)
#Задание 4
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
imp=mice(y,seed=11)
y=complete(imp,action = 2)
View(y)
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
imp=mice(y,seed=11)
View(y)
y=complete(imp,action = 2)
View(y)
ns=rownames(y)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
library(mice)
imp=mice(df,seed=11)
df=complete(imp,action = 2)
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
library(mice)
imp=mice(y,seed=11)
y=complete(imp,action = 2)
ns=rownames(y)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
mt=lm(y~x,df,na.rm = TRUE)
summary(mt)
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
ns=rownames(y)
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
library(mice)
imp=mice(y,seed=11)
y=complete(imp,action = 2)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
ns=rownames(y)
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
library(mice)
imp=mice(y,seed=11)
y=complete(imp,action = 2)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
View(y)
#Задание 4
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
ns=rownames(y)
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
library(mice)
imp=mice(y,seed=11)
y=complete(imp,action = 3)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
ns=rownames(y)
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
library(mice)
imp=mice(y,seed=11)
y=complete(imp,action = 4)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
ns=rownames(y)
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
library(mice)
imp=mice(y,seed=11)
y=complete(imp,action = 1)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
mt=lm(y~x,df,na.rm = TRUE)
summary(mt)
x=x[!is.na(df$y)]
res=mt$residuals[!is.na(df$y)]
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
library(corrplot)
nn=20
for(i in seq(length(x)-80,length(x)-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",x[tmp],"\n")
data=y[tmp,]#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=cormatrix[lower.tri(cormatrix)]
cat("Статистика треугольнику корреляционной матрицы \n")
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
#Задание 4
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
ns=rownames(y)
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
library(mice)
imp=mice(y,seed=11)
y=complete(imp,action = 1)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
mt=lm(y~x,df,na.rm = TRUE)
summary(mt)
x=x[!is.na(df$y)]
res=mt$residuals[!is.na(df$y)]
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
library(corrplot)
nn=20
for(i in seq(length(x)-80,length(x)-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",x[tmp],"\n")
data=y[tmp,]#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=cormatrix[lower.tri(cormatrix)]
cat("Статистика треугольнику корреляционной матрицы \n")
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
library(corrplot)
nn=20
for(i in seq(length(x)-80,length(x)-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",x[tmp],"\n")
data=y[tmp,]#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=abs(cormatrix[lower.tri(cormatrix)])
cat("Статистика по треугольнику корреляционной матрицы \n")
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
attitude[attitude$learning >= as.integer(head(sort(attitude$learning, decreasing = T),5)),]
which.max(rowSums(attitude[order(-attitude$learning)[1:5],c("complaints","raises","advance")]))
s=cut(quakes$mag)
s=cut(quakes$mag,6)
table(s)
table(cut(quakes$mag,5))
norm(43)
norm(matrix(1:45,nrow = 9))
.Primitive("sum")
.Primitive("norm")
.Internal(norm)
.Internal(norm(matrix(1:45,nrow = 9)))
.Internal("norm")
norm
#Задание 4
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
ns=rownames(y)
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
library(mice)
imp=mice(y,seed=11)
y=complete(imp,action = 1)
View(y)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
View(y)
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
mt=lm(y~x,df,na.rm = TRUE)
summary(mt)
x=x[!is.na(df$y)]
res=mt$residuals[!is.na(df$y)]
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
library(corrplot)
nn=20
for(i in seq(length(x)-80,length(x)-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",x[tmp],"\n")
data=y[tmp,]#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=abs(cormatrix[lower.tri(cormatrix)])
cat("Статистика по треугольнику корреляционной матрицы \n")
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
library(readxl)
data=data.frame(read_xlsx("РожьВсеГода.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
library(readxl)
data=data.frame(read_xlsx("РожьВсеГода.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
View(data)
library(readxl)
data=data.frame(read_xlsx("РожьВсеГода.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])#транспонирование для удобства
#получить массив лет
ns=rownames(y)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
library(mice)#обработать пустые значения
imp=mice(y,seed=11)
y=complete(imp,action = 1)
df=data.frame(x=x,y=y[,2])#объединить данные в фрейм
print(df[sample(1:nrow(df),13),])
library(readxl)
data=data.frame(read_xlsx("РожьВсеГода.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])#транспонирование для удобства
#получить массив лет
ns=rownames(y)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
library(mice)#обработать пустые значения
imp=mice(y,seed=11)
y=complete(imp,action = 1)
df=data.frame(x=x,y=y[,1])#объединить данные в фрейм
print(df[sample(1:nrow(df),13),])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
mt=lm(y~x,df,na.rm = TRUE)
summary(mt)
x=x[!is.na(df$y)]
res=mt$residuals[!is.na(df$y)]
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
library(corrplot)
nn=20
for(i in seq(length(x)-80,length(x)-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",x[tmp],"\n")
data=y[tmp,]#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=abs(cormatrix[lower.tri(cormatrix)])
cat("Статистика по треугольнику корреляционной матрицы \n")
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
print(df[sort(sample(1:nrow(df),13)),])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2)+
geom_smooth(method = lm)+
geom_smooth(se=F,col="red")
mt=lm(y~x,df)
summary(mt)
mt=lm(log(y)~x,df)
summary(mt)
mt=lm(log(y)~log(x),df)
summary(mt)
mt=lm(y~log(x),df)
summary(mt)
mt=lm(sqrt(y)~x,df)
summary(mt)
mt=lm(y~sqrt(x),df)
summary(mt)
mt=lm(sqrt(y)~sqrt(x),df)
summary(mt)
mt=lm(log(y)~sqrt(x),df)
summary(mt)
mt=lm(sqrt(y)~log(x),df)
summary(mt)
mt=lm(y~x^2,df)
summary(mt)
mt=lm(sqrt(log(y))~log(x),df)
summary(mt)
mt=lm(log(y)~log(x)+I(log(x)^2),df)
summary(mt)
