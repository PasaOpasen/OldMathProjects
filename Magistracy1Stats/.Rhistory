for(i in 1:length(spanlist)){
ls=loess(res~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
install.packages('caTools')
res=mt$residuals
#скользящее среднее
library(caTools)
spanlist=c(0.1,0.15,0.2)
plot(x,res,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=runmean(res)
lines(x,ls,col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
res=mt$residuals
#скользящее среднее
library(caTools)
spanlist=c(0.1,0.15,0.2)
plot(x,res,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=runmean(res,2+i)
lines(x,ls,col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
res=mt$residuals
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
res=mt$residuals
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
mt=lm(y~x,df)
summary(mt)
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
data=y[,i:(i+nn)]
corrplot(cor(data))
}
library(corrplot)
nn=15
for(i in seq(1,n-nn,nn)){
data=y[,i:(i+nn-1)]
corrplot(cor(data))
}
library(corrplot)
nn=15
for(i in seq(1,n-nn,nn)){
data=t(y[,i:(i+nn-1)])
corrplot(cor(data))
}
#Задание 4
n=150
x=1:150
y=matrix(rnorm(n*8,150,50),nrow=8)
df=data.frame(x=x,y=y[1,])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2)+
geom_smooth(method = lm)
mt=lm(y~x,df)
summary(mt)
res=mt$residuals
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
data=t(y[,i:(i+nn-1)])
corrplot(cor(data))
}
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
data=t(y[,i:(i+nn-1)])
corrplot(cor(data),method = "shade")
}
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
data=t(y[,i:(i+nn-1)])
corrplot(cor(data),method = "number")
}
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
data=t(y[,i:(i+nn-1)])
corrplot(cor(data),method = "pie")
}
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
cat("Times:",x[i:(i+nn-1)],"\n")
data=t(y[,i:(i+nn-1)])
corrplot(cor(data))
}
#Вариант 7
p1 = nchar("Дмитрий")
p2 = nchar("Пасько")
#Задание 1
price1 = c(
40 + p1,43 + p1,40,80,
74,40 + p2,55 + p2,42 + p2,
42,50,40 + p2,43,43,
35 + p1,40 + p1,30,36 + p1,
50,30 + p1,29,45 + p1,
40,42,40,36,
50,30 + p1,24 + p2,
25 + p2,40,32 + p1,
30,20,30,25,32 + p2
)
summary(price1)#минимальные характеристики
t.test(price1)#тест Стьюдента для среднего
vart=sd(price1)/mean(price1)*100
print(paste("Коэффициент вариации равен",vart,"%"))
cat("Коэффициент вариации равен",vart,"%")
cat("Коэффициент вариации равен",vart,"%")
bartlett.test(price1)
#Вариант 7
p1 = nchar("Дмитрий")
p2 = nchar("Пасько")
#Задание 1
price1 = c(
40 + p1,43 + p1,40,80,
74,40 + p2,55 + p2,42 + p2,
42,50,40 + p2,43,43,
35 + p1,40 + p1,30,36 + p1,
50,30 + p1,29,45 + p1,
40,42,40,36,
50,30 + p1,24 + p2,
25 + p2,40,32 + p1,
30,20,30,25,32 + p2
)
summary(price1)#минимальные характеристики
t.test(price1)#тест Стьюдента для среднего
vart=sd(price1)/mean(price1)*100
cat("Коэффициент вариации равен",vart,"%\n")
#так как коэффициент вариации < 30%, выборка достаточно однородная
bartlett.test(price1)
#Задание 4
n=150
x=1:150
y=matrix(rnorm(n*8,150,50),nrow=8)
df=data.frame(x=x,y=y[1,])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2)+
geom_smooth(method = lm)
mt=lm(y~x,df)
summary(mt)
res=mt$residuals
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",x[tmp],"\n")
data=t(y[,tmp])#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
summary(cormatrix[lower.tri(cormatrix)])
corrplot(cormatrix)
}
summary(cormatrix[lower.tri(cormatrix)])
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",x[tmp],"\n")
data=t(y[,tmp])#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=cormatrix[lower.tri(cormatrix)]
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",x[tmp],"\n")
data=t(y[,tmp])#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=cormatrix[lower.tri(cormatrix)]
cat("Статистика треугольнику корреляционной матрицы \n")
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
combin_count <- function(n, k, with_repretitions = FALSE) {
if(with_repretitions){}
}
mat <- matrix(0, m, n)
#Задание 1
library(readxl)
tab=read_xlsx("Псевдоцены.xlsx")
View(tab)
colnames(tab)=c("Price","Year","City","Distrinct")
View(tab)
#Задание 1
library(readxl)
tab=read_xlsx("Псевдоцены.xlsx")
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
View(tab)
library(dplyr)
data_frame(tab)%>%select(Price,Year,City)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
tibble(tab)
tibble(tab)%>%select(Price,Year,City)
View(tab)
#Задание 1
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
library(dplyr)
# по городам
tibble(tab)%>%select(Price,Year,City)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
tibble(tab)
# по городам
tibble(tab)%>%select(tab$Price,Year,City)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
library(dplyr)
# по городам
tibble(tab)%>%select(Price,Year,City)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
library(readxl)
library(dplyr)
tab=tibble(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
#Задание 1
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab=tibble(tab)
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
#Задание 1
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
# по городам
tibble(tab)%>%select(1:3)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
#Задание 1
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
library(dplyr)
tib=tibble(tab)%>%rename(Price=tab$Price,Year=tab$Year,City=tab$City,Distrinct=tab$Distrinct)
tib=tibble(tab)
tibble(tab)%>%rename(Price=tab$Price,Year=tab$Year,City=tab$City,Distrinct=tab$Distrinct)
#Задание 1
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
library(dplyr)
tib=tibble(tab)%>%rename(Price=tab$Price)
tib=tibble(tab)
rename(tib,Price=tab$Price,Year=tab$Year,City=tab$City,Distrinct=tab$Distrinct)
library(dplyr)
tib=tibble(tab)
rename(tib,Price=tib$Price,Year=tib$Year,City=tib$City,Distrinct=tib$Distrinct)
#Задание 1
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
library(dplyr)
tib=tibble(tab)
rename_all(tib,c("Price","Year","City","Distrinct"))
View(tib)
library(dplyr)
tib=tibble(tab)%>%rename(Price=tab.Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)
View(tib)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
tib=tibble(tab)%>%rename(tab.Price=Price,Year=tab.Year,City=tab.City,Distrinct=tab.Distrinct)
View(tib)
tib=tibble(tab)
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
tib=tibble(tab)
View(tib)
str(tib)
tib=data_frame(tab)
tib=data_frame(tab)
View(tib)
tib=data_frame(tab)[[1]]
View(tib)
#Задание 1
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
library(dplyr)
tib=data_frame(tab)[[1]]
# по городам
tib%>%select(Price,Year,City)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
tb=tib%>%select(Price,Year,City)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
table(tb$Year,tb$City)
table(tb$Year,tb$City,tb$mean)
ms=matrix(tb$mean,nrow=length(levels(tb$Year)))
View(ms)
colnames(ms)=levels(tb$City)
View(ms)
tb=tib%>%select(Price,Year,City)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
ms=matrix(tb$mean,nrow=length(levels(tb$Year)))
colnames(ms)=levels(tb$City)
rownames(ms)=levels(tb$Year)
ms
View(tb)
View(tab)
data_frame(ms)
data.frame(ms)
data.frame(ms)
colnames(ms)=levels(tb$City)
rownames(ms)=levels(tb$Year)
View(ms)
# по районам
tb=tib%>%select(Price,Year,Distrinct)%>%group_by(Year,Distrinct)%>%
summarise(mean=mean(Price))
ms=matrix(tb$mean,nrow=length(levels(tb$Year)))
ms= data.frame(ms)
colnames(ms)=levels(tb$Distrinct)
rownames(ms)=levels(tb$Year)
View(ms)
# по стране
tb=tib%>%select(Price,Year)%>%group_by(Year)%>%
summarise(mean=mean(Price))
ms=matrix(tb$mean,nrow=length(levels(tb$Year)))
ms= data.frame(ms)
colnames(ms)=c("mean")
rownames(ms)=levels(tb$Year)
View(ms)
plot(ms)
#Вариант 7
p1 = nchar("Дмитрий")
p2 = nchar("Пасько")
#Задание 1
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
library(dplyr)
tib=data_frame(tab)[[1]]
# по городам
tb=tib%>%select(Price,Year,City)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
ms=t(matrix(tb$mean,nrow=length(levels(tb$Year))))
ms= data.frame(ms)
colnames(ms)=levels(tb$City)
rownames(ms)=levels(tb$Year)
# по районам
tb=tib%>%select(Price,Year,Distrinct)%>%group_by(Year,Distrinct)%>%
summarise(mean=mean(Price))
ms=t(matrix(tb$mean,nrow=length(levels(tb$Year))))
ms= data.frame(ms)
colnames(ms)=levels(tb$Distrinct)
rownames(ms)=levels(tb$Year)
# по стране
tb=tib%>%select(Price,Year)%>%group_by(Year)%>%
summarise(mean=mean(Price))
ms=t(matrix(tb$mean,nrow=length(levels(tb$Year))))
ms= data.frame(ms)
colnames(ms)=c("mean")
rownames(ms)=levels(tb$Year)
plot(ms)
#Вариант 7
p1 = nchar("Дмитрий")
p2 = nchar("Пасько")
#Задание 1
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
library(dplyr)
tib=data_frame(tab)[[1]]
# по городам
tb=tib%>%select(Price,Year,City)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
ms=t(matrix(tb$mean,nrow=length(levels(tb$Year))))
ms= data.frame(ms)
rownames(ms)=levels(tb$City)
colnames(ms)=levels(tb$Year)
# по районам
tb=tib%>%select(Price,Year,Distrinct)%>%group_by(Year,Distrinct)%>%
summarise(mean=mean(Price))
ms=t(matrix(tb$mean,nrow=length(levels(tb$Year))))
ms= data.frame(ms)
rownames(ms)=levels(tb$Distrinct)
colnames(ms)=levels(tb$Year)
# по стране
tb=tib%>%select(Price,Year)%>%group_by(Year)%>%
summarise(mean=mean(Price))
ms=t(matrix(tb$mean,nrow=length(levels(tb$Year))))
ms= data.frame(ms)
rownames(ms)=c("mean")
colnames(ms)=levels(tb$Year)
plot(ms)
View(ms)
#Вариант 7
p1 = nchar("Дмитрий")
p2 = nchar("Пасько")
#Задание 1
library(readxl)
tab=data.frame(read_xlsx("Псевдоцены.xlsx"))
colnames(tab)=c("Price","Year","City","Distrinct")
tab$Year=factor(tab$Year)
tab$City=factor(tab$City)
tab$Distrinct=factor(tab$Distrinct)
library(dplyr)
tib=data_frame(tab)[[1]]
# по городам
tb=tib%>%select(Price,Year,City)%>%group_by(Year,City)%>%
summarise(mean=mean(Price))
ms=matrix(tb$mean,nrow=length(levels(tb$Year)))
ms= data.frame(ms)
colnames(ms)=levels(tb$City)
rownames(ms)=levels(tb$Year)
# по районам
tb=tib%>%select(Price,Year,Distrinct)%>%group_by(Year,Distrinct)%>%
summarise(mean=mean(Price))
ms=matrix(tb$mean,nrow=length(levels(tb$Year)))
ms= data.frame(ms)
colnames(ms)=levels(tb$Distrinct)
rownames(ms)=levels(tb$Year)
# по стране
tb=tib%>%select(Price,Year)%>%group_by(Year)%>%
summarise(mean=mean(Price))
ms=matrix(tb$mean,nrow=length(levels(tb$Year)))
ms= data.frame(ms)
colnames(ms)=c("mean")
rownames(ms)=levels(tb$Year)
plot(ms$mean)
plot(as.numeric(levels(tb$Year)),ms$mean)
plot(as.numeric(levels(tb$Year),type="b"),ms$mean)
plot(as.numeric(levels(tb$Year)),ms$mean,type="b")
x=as.numeric(levels(tb$Year))
y=ms$mean
plot(x,y,type="b")
