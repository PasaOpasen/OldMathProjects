df=read.csv(url(http:/minerals.usgs.gov/alaska/economic/sewpen.html))
df=read.csv(url(http://minerals.usgs.gov/alaska/economic/sewpen.html))
df1=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat.csv"))
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"))
View(df1)
View(df2)
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),drop=4)
df1=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat.csv"))
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),skip=4)
View(df2)
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),skip=5)
View(df2)
View(df2)
View(df1)
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),skip=6)
View(df2)
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),skip=5,sep = ";",dec=".")
View(df2)
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),skip=5,sep = ";",dec=".",na.strings = "Don`t remember")
View(df2)
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),skip=5,sep = ";",dec=".",na.strings = "Don't remember")
View(df1)
View(df2)
View(df1)
View(df1)
df=rbind(df1,df2)
View(df2)
View(df1)
df1=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat.csv"))
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),skip=5,sep = ";",dec=".",na.strings = "Don't remember")
df2$Observer=NA
df=rbind(df1,df2[,-ncol(df2)])
View(df2)
View(df1)
View(df1)
df1=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat.csv"))
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),skip=5,sep = ";",dec=".",na.strings = "Don't remember")
df=rbind(df1[,-2],df2[,-ncol(df2)])
View(df1)
View(df2)
View(df2)
df1=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat.csv"))
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),skip=5,sep = ";",dec=".",na.strings = "Don't remember")
df=rbind(df1[,-2],df2)
df1=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat.csv"))
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),skip=5,sep = ";",dec=".",na.strings = "Don't remember")
names(df2)=names(df1[,-2])
df=rbind(df1[,-2],df2)
summary(df)
View(df1)
View(df1)
cv=names(df)[-(1:3)][c(T,F)]
df$total=rowSums(df[,cv])
df1=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat.csv"))
df2=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat2.csv"),skip=5,sep = ";",dec=".",na.strings = "Don't remember")
names(df2)=names(df1[,-2])
df=rbind(df1[,-2],df2)
df[,nrow(df)]=numeric(df[,nrow(df)])
df=rbind(df1[,-2],df2)
df[,ncol(df)]=numeric(df[,col(df)])
df=rbind(df1[,-2],df2)
df[,ncol(df)]=numeric(df[,ncol(df)])
df=rbind(df1[,-2],df2)
df[,ncol(df)]=as.numeric(df[,ncol(df)])
cv=names(df)[-(1:3)][c(T,F)]
df$total=rowSums(df[,cv])
summary(df$total)
sapply(df[,endsWith(names(df),"Ht")], max)
sort(sapply(df[,endsWith(names(df),"Ht")], max))
sort(-sapply(df[,endsWith(names(df),"Ht")], max))
sort(sapply(df[,endsWith(names(df),"Ht")], max),decreasing = T)
df=df1[,c(1,endsWith(names(df),"Ht"))]
View(df)
View(df)
df1=read.csv(url("https://github.com/tonytonov/Rcourse/raw/master/R%20programming/avianHabitat.csv"))
View(df1)
df=cbind(df1[,2],df1[,endsWith(names(df),"Ht")])
View(df)
df=cbind(df1[,2],df1[,endsWith(names(df1),"Ht")])
View(df)
vc=sapply(df[,-1], max)
for(i in 2:ncol(df)){
print(df[which(df[,c(1,i)]==vc[i-1]),c(1,i)])
}
tapply(df$PDB, df$Observer_name, max)
View(df)
vc=sapply(df[,-1], max)
for(i in 2:ncol(df)){
k= which(df[,i]==vc[i-1])
print(df[k,c(1,i)])
}
cat_temper <- c("задиристый", "игривый", "спокойный", "ленивый")
cat_color <- c("белый", "серый", "чёрный", "рыжий")
cat_age <- c("кот", "котёнок")
cat_trait <- c("с умными глазами", "с острыми когтями", "с длинными усами")
expand.grid(cat_temper,cat_color,cat_age,cat_trait)
#всевозможные комбинации
expand.grid(cat_temper,cat_color,cat_age,cat_trait, KEEP.OUT.ATTRS = TRUE)
expand.grid(cat_temper,cat_color,cat_age,cat_trait, KEEP.OUT.ATTRS = FALSE)
expand.grid(cat_temper,cat_color,cat_age,cat_trait)[42]
expand.grid(cat_temper,cat_color,cat_age,cat_trait)[42,]
#всевозможные комбинации
sort(expand.grid(cat_temper,cat_color,cat_age,cat_trait))
expand.grid(cat_temper,cat_color,cat_age,cat_trait) %>% arrange(cat_temper,cat_color,cat_age,cat_trait)
library(dplyr)
#всевозможные комбинации
expand.grid(cat_temper,cat_color,cat_age,cat_trait) %>% arrange(cat_temper,cat_color,cat_age,cat_trait)
library(dplyr)
#всевозможные комбинации
expand.grid(cat_temper,cat_color,cat_age,cat_trait) %>%
arrange(cat_temper,cat_color,cat_age,cat_trait)
library(stringi)
#всевозможные комбинации
expand.grid(stri_sort(cat_temper),stri_sort(cat_color),stri_sort(cat_age),stri_sort(cat_trait))
m=mapply(paste, d)
library(stringi)
#всевозможные комбинации
d=expand.grid(cat_temper,cat_color,cat_age,cat_trait)
m=mapply(paste, d)
View(m)
m=mapply(paste, d[[1]],d[[2]])
m=mapply(paste, d[[1:4]])
m=mapply(paste, d[,1:4])
m=mapply(paste, d[[1]],df[[2]],df[[3]],df[[4]])
d=expand.grid(cat_temper,cat_color,cat_age,cat_trait)
m=mapply(paste, d[[1]],d[[2]],d[[3]],d[[4]])
sort(m)
View(df1)
View(df)
df=cbind(df1[,1:2],df1[,endsWith(names(df1),"Ht")])
View(df)
df=cbind(df1[,1:2],df1[,endsWith(names(df1),"Ht")])
names(df)[1:2]=c("P","S")
View(df)
df %>% group_by(P,S) %>% summarise_each(funs = function(x)max(x)>0)
library(dplyr)
df %>% group_by(P,S) %>% summarise_each(funs = function(x)max(x)>0) %>% sum
View(df)
df=cbind(df1[,1:2],df1[,endsWith(names(df1),"Ht")])
names(df)[1:2]=c("P","S")
df[,1]=apply(df[,1],1,function(t)stri_sub(t,length = length(t)-2))
apply(df[,1],1,function(t)stri_sub(t,length = length(t)-2))
df=cbind(df1[,1:2],df1[,endsWith(names(df1),"Ht")])
names(df)[1:2]=c("P","S")
df[,1]=apply(df[,1],1,function(t)stri_sub(t,length = nchar(t)-2))
df=cbind(df1[,1:2],df1[,endsWith(names(df1),"Ht")])
names(df)[1:2]=c("P","S")
df[,1]
df=cbind(df1[,1:2],df1[,endsWith(names(df1),"Ht")])
names(df)[1:2]=c("P","S")
df=transform(df,P=stri_replace(df$P,"[:digit:]+",""))
df=cbind(df1[,1:2],df1[,endsWith(names(df1),"Ht")])
names(df)[1:2]=c("P","S")
df=transform(df,P=factor(str_replace(df$P,"[:digit:]+","")) )
df=cbind(df1[,1:2],df1[,endsWith(names(df1),"Ht")])
names(df)[1:2]=c("P","S")
df=transform(df,P=factor(stri_replace(df$P,"[:digit:]+","")) )
df=transform(df,P=factor(stri_replace(.$P,"[:digit:]+","")) )
df=cbind(df1[,1:2],df1[,endsWith(names(df1),"Ht")])
names(df)[1:2]=c("P","S")
df=transform(df,P=factor(stri_replace(.$P,regex="[:digit:]+","")) )
df=cbind(df1[,1:2],df1[,endsWith(names(df1),"Ht")])
names(df)[1:2]=c("P","S")
df=transform(df,P=factor(stri_replace(df$P,regex="[:digit:]+","")) )
View(df)
library(dplyr)
df %>% group_by(P,S) %>% summarise_each(funs = function(x)max(x)>0)
df %>% group_by(P,S) %>% summarise_each(funs = function(x)sum(x>0))
