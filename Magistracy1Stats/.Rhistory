#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(dataset)%>%mutate(cluster=factor(fit$cluster))
getfaces(newdata)
}
getfacesbykmeans(data[,2:5],2)
getfaces=function(dataset){
means=dataset%>%group_by_if(is.factor)
means=summarise_if(means,is.numeric,mean)
library(TeachingDemos)
faces(means)
}
getfacesbykmeans=function(dataset,k){
fit=kmeans(dataset,k)#строится модель
fit
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(dataset)%>%mutate(cluster=factor(fit$cluster))
getfaces(newdata)
}
getfacesbykmeans(data[,2:5],2)
getfaces=function(dataset){
means=dataset%>%group_by_if(is.factor)
means=summarise_if(means,is.numeric,mean)
library(TeachingDemos)
faces(means)
}
getfaces(mtcars[2:6,2:4])
mtcars
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
View(pp)
getfaces=function(dataset){
means=dataset%>%group_by_if(is.factor)
means
means=summarise_if(means,is.numeric,mean)
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
means
means=summarise_if(means,is.numeric,mean)
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
print(means)
means=summarise_if(means,is.numeric,mean)
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
print(means)
means=summarise_if(means,is.numeric,function(x) sapply(x,mean))
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
print(means)
print(4)
means=summarise_if(means,is.numeric,function(x) sapply(x,mean))
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
print(means)
means=summarise_if(means,is.numeric,function(x) sapply(x,mean))
print(means)
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
print(means)
means=summarise_if(means,is.numeric,function(x) sapply(x,mean))
print(means)
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
means=sapply(means[,sapply(means,is.numeric)], mean)
print(means)
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
means=sapply(means[sapply(means,is.numeric)], mean)
print(means)
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
means=sapply(select(means,sapply(means,is.numeric)), mean)
print(means)
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
means=sapply(select(means,sapply(dataset,is.numeric)), mean)
print(means)
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
sapply(pp,is.numeric)
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
means=sapply(select(means,colnames(dataset)[sapply(dataset,is.numeric)]), mean)
print(means)
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
sapply(pp,is.numeric)
getfaces=function(dataset){
means=data_frame(dataset)%>%group_by_if(is.factor)
means=sapply(select_if(means,is.numeric), mean)
print(means)
library(TeachingDemos)
faces(means)
}
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
sapply(pp,is.numeric)
means=data_frame(pp[2:6,2:4])%>%group_by_if(is.factor)
View(means)
means=sapply(select_if(means,is.numeric), mean)
View(means)
means=apply(select_if(means,is.numeric),2, mean)
means=apply(data.frame(select_if(means,is.numeric)),2, mean)
means=apply(data.frame(select_if(means,is.numeric)),2, mean)
means=data_frame(pp[2:6,2:4])%>%group_by_if(is.factor)
means=apply(data.frame(select_if(means,is.numeric)),2, mean)
means=data_frame(pp[2:6,2:4])%>%group_by_if(is.factor)
means=apply(select_if(means,is.numeric),2, mean)
means=data_frame(pp[2:6,2:4])%>%group_by_if(is.factor)
select_if(means,is.numeric)
View(means)
means=data_frame(pp[2:6,2:4])%>%group_by_if(is.factor)
means=apply(means,2, mean)
means=data_frame(pp[2:6,2:4])%>%group_by_if(is.factor)
means=data_frame(pp[2:6,2:4])%>%group_by_if(is.factor)%>%apply(2, mean)
means=data_frame(pp[2:6,2:4])%>%group_by_if(is.factor)%>%lapply(2, mean)
means=data_frame(pp[2:6,2:4])%>%group_by_if(is.factor)%>%lapply(mean)
View(means)
library(dplyr)
normality_by <- function(test){
tmp=test%>%group_by_(.dots=lapply(colnames(.)[2:3], as.symbol))%>%
summarise_if(is.numeric,function(x)shapiro.test(x)$p.value)
tmp=as.data.frame(tmp)
colnames(tmp)[length(colnames(tmp))]="p_value"
return(tmp)
}
normality_by(mtcars[, c("mpg", "am", "vs")])
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
pp=mtcars
pp$cyl=factor(pp$cyl)
getfaces(pp[2:6,2:4])
pp=mtcars
pp$cyl=factor(pp$cyl)
means=data_frame(pp[2:6,2:4])%>%group_by_if(is.factor)%>%
summarise_if(is.numeric,mean)
View(means)
means=data_frame(pp[2:8,2:6])%>%group_by_if(is.factor)%>%
summarise_if(is.numeric,mean)
pp[2:8,2:6]
data_frame(pp[2:8,2:6])%>%group_by_if(is.factor)
data_frame(pp[2:8,2:6])%>%group_by_if(is.factor)%>%
summarise_if(is.numeric,mean)
data_frame(pp[2:8,2:6])
means=data_frame(pp[2:8,2:6])%>%group_by_if(is.factor)%>%
summarise_if(is.numeric,funs(mean))
pp=mtcars
pp$cyl=factor(pp$cyl)
means=data_frame(pp[2:8,2:6])%>%group_by_if(is.factor)%>%
summarise_if(is.numeric,funs(mean))
means=data_frame(pp[2:8,2:6])%>%group_by_if(is.factor)%>%
summarise_all(funs(mean))
View(means)
means=data_frame(pp[2:8,2:6])%>%group_by_at(sapply(pp[2:8,2:6],is.factor))
means=data_frame(pp[2:8,2:6])%>%group_by_at(vars(sapply(pp[2:8,2:6],is.factor)))
means=data_frame(pp[2:8,2:6])%>%group_by_at(as.numeric(sapply(pp[2:8,2:6],is.factor)))
means=data_frame(pp[2:8,2:6])
View(means)
View(means)
means=means%>%group_by_at(as.numeric(sapply(pp[2:8,2:6],is.factor)))%>%
summarise_all(funs(mean))
means=means%>%group_by_at(as.numeric(sapply(means,is.factor)))
means=means%>%group_by_at(as.numeric(sapply(means,is.factor)))%>%
summarise_all(funs(mean))
View(means)
means=means%>%group_by_at(as.numeric(sapply(means,is.factor)))
View(means)
pp=mtcars
pp$cyl=factor(pp$cyl)
means=data_frame(pp[2:8,2:6])
means=means%>%group_by_at(as.numeric(sapply(means,is.factor)))
View(means)
means=means%>%group_by_at(1)%>%
summarise_all(funs(mean))
means=data_frame(pp[2:8,2:6])
means=means%>%group_by_at(1)%>%
summarise_all(funs(mean))
View(means)
means=data_frame(pp[2:8,2:6])
means=means%>%group_by_at(2)%>%
summarise_all(funs(mean))
tmp=pp[2:8,2:6]
means=data_frame(tmp)
tmp=pp[,2:6]
means=data_frame(tmp)
means=means%>%group_by_at(2)%>%
summarise_all(funs(mean))
getfacesbykmeans=function(dataset,k){
fit=kmeans(dataset,k)#строится модель
fit
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(dataset)%>%mutate(cluster=factor(fit$cluster))
#getfaces(newdata)
}
getfacesbykmeans(data[,2:5],2)
getfacesbykmeans=function(dataset,k){
fit=kmeans(dataset,k)#строится модель
fit
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(dataset)%>%mutate(cluster=factor(fit$cluster))
#getfaces(newdata)
}
dd=getfacesbykmeans(data[,2:5],2)
View(dd)
dd=getfacesbykmeans(data[,2:5],2)
means=dd%>%group_by_(cluster)
dd=getfacesbykmeans(data[,2:5],2)
means=dd%>%group_by(cluster)
dd=getfacesbykmeans(data[,2:5],2)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
View(means)
library(TeachingDemos)
faces(means)
View(means)
library(TeachingDemos)
faces(means[,2:5])
getfacesbykmeans=function(dataset,k){
fit=kmeans(dataset,k)#строится модель
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(dataset)%>%mutate(cluster=factor(fit$cluster))
}
dd=getfacesbykmeans(data[,2:5],2)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
getfacesbykmeans=function(dataset,k){
fit=kmeans(dataset,k)#строится модель
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(dataset)%>%mutate(cluster=factor(fit$cluster))
}
dd=getfacesbykmeans(data[,2:5],2)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
getfacesbykmeans=function(dataset,k){
fit=kmeans(dataset,k)#строится модель
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(dataset)%>%mutate(cluster=factor(fit$cluster))
}
dd=getfacesbykmeans(data[,2:5],2)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
getfacesbykmeans=function(dataset,k){
fit=kmeans(dataset,k)#строится модель
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(dataset)%>%mutate(cluster=factor(fit$cluster))
}
dd=getfacesbykmeans(data[,2:5],2)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
getfacesbykmeans=function(dataset,k){
fit=kmeans(dataset,k)#строится модель
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(dataset)%>%mutate(cluster=factor(fit$cluster))
}
dd=getfacesbykmeans(data[,2:5],2)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
getfacesbykmeans=function(dataset,k){
fit=kmeans(dataset,k)#строится модель
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(dataset)%>%mutate(cluster=factor(fit$cluster))
}
dd=getfacesbykmeans(data[,2:5],2)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
dd=getfacesbykmeans(data[,2:5],3)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
dd=getfacesbykmeans(data[,2:5],3)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
dd=getfacesbykmeans(data[,2:5],3)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
dd=getfacesbykmeans(data[,2:5],3)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
dd=getfacesbykmeans(data[,2:5],3)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
dd=getfacesbykmeans(data[,2:5],3)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
dd=getfacesbykmeans(data[,2:5],3)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
dd=getfacesbykmeans(data[,2:5],3)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
dd=getfacesbykmeans(data[,2:5],3)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
dd=getfacesbykmeans(data[,2:5],3)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
dd=getfacesbykmeans(data[,2:5],3)
means=dd%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])
#создаем матрицу средних
means=getbykmeans(data[,2:5],4)%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])#рисуем лица
#функция делает анализ dataset по методу k-means с k кластерами, затем добавляет результаты к датасету
getbykmeans=function(dataset,k){
fit=kmeans(dataset,k)#строится модель
#Добавляем кластер к фрейму данных
library(dplyr)
newdata=as_data_frame(dataset)%>%mutate(cluster=factor(fit$cluster))
}
#создаем матрицу средних
means=getbykmeans(data[,2:5],4)%>%group_by(cluster)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(means[,2:5])#рисуем лица
###################################Задание 4
data =data.frame(read_excel("Приложение 2.xlsx"))
data$CLASS=factor(data$CLASS)
pairs(data[,1:7],col=data$CLASS,pch=16)
View(data)
newdata=as_data_frame(data)%>%group_by(CLASS)%>%
summarise_all(funs(mean))
library(TeachingDemos)
faces(newdata[,1:7])#рисуем лица
newdata=as_data_frame(data)%>%group_by(CLASS)%>%
summarise_all(funs(mean))
View(newdata)
library(TeachingDemos)
faces(newdata[,2:8])#рисуем лица
newdata=as_data_frame(data)%>%group_by(CLASS)%>%
summarise_all(funs(mean))
faces(newdata[,2:8])#рисуем лица
###################################Задание 5
data2 =data.frame(read_excel("Приложение 3.xlsx"))
data2= apply(data2,2,as.numeric)
data2=data2[31:80,]
(cluster=predict(rf, data2))
data2=data.frame(cbind(data2,cluster))
data2$cluster=factor(data2$cluster)
data2 =data.frame(read_excel("Приложение 3.xlsx"))
data2= apply(data2,2,as.numeric)
data2=data2[31:80,]
(cluster=predict(rf, data2))
data2=data.frame(cbind(data2,cluster))
data2$cluster=factor(data2$cluster)
###################################Задание 4
data =data.frame(read_excel("Приложение 2.xlsx"))
data$CLASS=factor(data$CLASS)
pairs(data[,1:7],col=data$CLASS,pch=16)
newdata=as_data_frame(data)%>%group_by(CLASS)%>%
summarise_all(funs(mean))
faces(newdata[,2:8])#рисуем лица
library(MASS)
#линейный дискриминантный анализ
ldadat <- lda(CLASS~.,data,method="t")
ldadat$means#групповые средние
(mat=ldadat$scaling)#матрица дискриминантных функций
#matrix(nrow=1,as.numeric(data[65,1:7]))%*%as.matrix(mat)
#plot(ldadat)
#функция для оценки ошибки
misclass <- function(pred, obs) {
tbl <- table(pred, obs)
sum <- colSums(tbl)
dia <- diag(tbl)
msc <- (sum - dia)/sum * 100
m.m <- mean(msc)
cat("Classification table:", "\n")
print(tbl)
cat("Misclassification errors:", "\n")
print(round(msc, 1))
}
misclass(predict(ldadat, data[,1:7])$class, data[,8])
#дерево классификации
library(tree)
datatree <- tree(data[,8] ~ ., data[,-8])
plot(datatree)
text(datatree)
#то же, что и раньше, только методом randomForest
library(randomForest)
rf <- randomForest(data[,8] ~ ., data=data[,1:7])
rfp <- predict(rf, data[,1:7])
table(rfp, data[,8])
MDSplot(randomForest(data[,-8]), data[,8])
misclass(rfp, data[,8])
###################################Задание 5
data2 =data.frame(read_excel("Приложение 3.xlsx"))
data2= apply(data2,2,as.numeric)
data2=data2[31:80,]
(cluster=predict(rf, data2))
data2=data.frame(cbind(data2,cluster))
data2$cluster=factor(data2$cluster)
newdata=as_data_frame(data2)%>%group_by(cluster)%>%
summarise_all(funs(mean))
View(newdata)
newdata=as_data_frame(data2)%>%group_by(cluster)%>%
summarise_all(funs(mean))
faces(newdata[,2:8])#рисуем лица
