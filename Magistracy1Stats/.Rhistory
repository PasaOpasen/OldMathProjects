plot(data,type="b")
fit=lm(values~time,yt)
ggplot(data,aes(x=time,y=values))+
geom_point()+
geom_smooth(method=lm)
summary(fit)
#Задание 3
library(ggplot2)
yt=c(1133+ p1,	1222,	1354+ p1,	1389,	1342+ p2,	1377,	1491,	1684+ p2)
data=data.frame(time=1:length(yt),values=yt)
plot(data,type="b")
fit=lm(values~time,data)
ggplot(data,aes(x=time,y=values))+
geom_point()+
geom_smooth(method=lm)
summary(fit)
pr=predict(fit,c(9))
pr=predict(fit,data.frame(x = 9))
pr=predict(fit,data.frame(time = c(9)))
summary(pr)
pr
pr=predict(fit,data.frame(time = c(9)), se.fit=TRUE, interval="prediction", level=0.90)
pr
predict(fit,data.frame(time = c(9)), se.fit=TRUE, interval="confidence", level=0.95)
predict(fit,data.frame(time = c(9)), se.fit=TRUE, interval="prediction", level=0.95)
cf=fit$coefficients
predict(fit,data.frame(time = c(9)), se.fit=TRUE, interval="prediction", level=0.95)
#прогноз среднего
predict(fit,data.frame(time = c(9)), se.fit=TRUE, interval="confidence", level=0.95)$fit
#прогноз индивидуального
predict(fit,data.frame(time = c(9)), se.fit=TRUE, interval="prediction", level=0.95)$fit
install.packages("readxl")
library(readxl)
data =read_excel("Таблица 1.xlsx")
View(data)
data=datacrude[-1:4,]
datacrude =read_excel("Таблица 1.xlsx")
data=datacrude[-1:4,]
library(readxl)
datacrude =data.frame(read_excel("Таблица 1.xlsx"))
data=datacrude[-1:4,]
library(readxl)
library(dplyr)
datacrude =data_frame(read_excel("Таблица 1.xlsx"))
data=datacrude[-1:4,]
datacrude =data.frame(read_excel("Таблица 1.xlsx"))
View(datacrude)
library(readxl)
library(dplyr)
datacrude =data.frame(read_excel("Таблица 1.xlsx"))
data=datacrude[1:4,]
View(data)
data=datacrude[-1:4,]
datacrude =data.frame(read_excel("Таблица 1.xlsx"))
data=datacrude[5:nrow(datacrude),]
View(datacrude)
View(data)
datacrude =data.frame(read_excel("Таблица 1.xlsx"))
data=datacrude[5:nrow(datacrude),-c(1)]
View(data)
data=datacrude[5:nrow(datacrude),-c(1)]
colnames(data)=c("Country","Doctors","Deaths","GDP","Costs")
View(datacrude)
View(data)
str(data)
colnames(data)=c("Country","Doctors","Deaths","GDP","Costs")
data[,2:5]=apply(data[,2:5],2,as.numeric)
View(data)
data=datacrude[5:nrow(datacrude),-c(1)]
colnames(data)=c("Country","Doctors","Deaths","GDP","Costs")
data[,2:5]=apply(data[,2:5],2,function(x)scale( as.numeric(x)))
View(data)
d = dist(data)
fit <- hclust(d, method = "single")
plot(fit, labels = test_data$labels)
rect.hclust(fit, 2)
d = dist(data[,2:5])
fit <- hclust(d, method = "single")
plot(fit, labels = data$Country)
#rect.hclust(fit, 2)
#чтение данных и чистка
library(readxl)
datacrude =data.frame(read_excel("Таблица 1.xlsx"))
data=datacrude[5:nrow(datacrude),-c(1)]
colnames(data)=c("Country","Doctors","Deaths","GDP","Costs")
data[,2:5]=apply(data[,2:5],2,function(x)scale( as.numeric(x)))
#задание 1
d = dist(data[,2:5])
fit <- hclust(d, method = "single")
plot(fit, labels = data$Country)
#rect.hclust(fit, 2)
d = dist(data)
fit <- hclust(d, method = "single")
plot(fit, labels = data$Country)
#rect.hclust(fit, 2)
d = dist(data[,2:5])
fit <- hclust(d, method = "single")
plot(fit, labels = data$Country)
rect.hclust(fit, 2)
d = dist(data[,2:5], method = "euclidean")#матрица расстояний
fit <- hclust(d, method = "ward.D")
plot(fit, labels = data$Country)
d = dist(data[,2:5], method = "euclidean")#матрица расстояний
fit <- hclust(d, method = "ward.D")
plot(fit, labels = data$Country,xlab = "Countries")
library(ggplot2)
d <- iris[, c("Sepal.Length", "Petal.Width")]
fit <- kmeans(d, 3)
d$clusters <- factor(fit$cluster)
ggplot(d, aes(Sepal.Length, Petal.Width, col = clusters))+
geom_point(size = 2)+
theme_bw()
fit <- kmeans(d, 3)
fit$totss
fit <- kmeans(d, 2)
fit$totss
fit <- kmeans(d, 2)
fit$totss
fit <- kmeans(d, 2)
fit$totss
fit <- kmeans(d, 6)
fit$totss
fit <- kmeans(d, 6)
fit$totss
fit <- kmeans(d, 6)
fit$tot.withinss
fit <- kmeans(d, 3)
fit$tot.withinss
fit <- kmeans(d, 2)
fit$tot.withinss
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums)
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
View(data)
newdata=data
newdata$cluster=fit$cluster
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = clusters))+
geom_point(size = 2)+
theme_bw()
newdata=data
newdata$cluster=fit$cluster
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 2)+
theme_bw()
View(newdata)
#чтение данных и чистка
library(readxl)
datacrude =data.frame(read_excel("Таблица 1.xlsx"))
data=datacrude[5:nrow(datacrude),-c(1)]
colnames(data)=c("Country","Doctors","Deaths","GDP","Costs")
data[,2:5]=apply(data[,2:5],2,function(x)scale( as.numeric(x)))#тут переменные из текста преобразуются в числа и стандартизируются
#задание 1
d = dist(data[,2:5], method = "euclidean")#матрица расстояний
fit <- hclust(d, method = "ward.D")
plot(fit, labels = data$Country,xlab = "Countries")
#Задание 2
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
fit=kmeans(data[,2:5], 2)
newdata=data
newdata$cluster=fit$cluster
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 2)+
theme_bw()
newdata=data
newdata$cluster=fit$factor(cluster)
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 2)+
theme_bw()
newdata=data
newdata$cluster=fit$factor(cluster)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 2)+
theme_bw()
View(data)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 2)+
facet_grid(Country~)
theme_bw()
#чтение данных и чистка
library(readxl)
datacrude =data.frame(read_excel("Таблица 1.xlsx"))
data=datacrude[5:nrow(datacrude),-c(1)]
colnames(data)=c("Country","Doctors","Deaths","GDP","Costs")
data[,2:5]=apply(data[,2:5],2,function(x)scale( as.numeric(x)))#тут переменные из текста преобразуются в числа и стандартизируются
data[,1]=factor(data[,1])
#задание 1
d = dist(data[,2:5], method = "euclidean")#матрица расстояний
fit <- hclust(d, method = "ward.D")
plot(fit, labels = data$Country,xlab = "Countries")
#Задание 2
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
fit=kmeans(data[,2:5], 2)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 2)+
facet_grid(Country~)
theme_bw()
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
fit=kmeans(data[,2:5], 2)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 2)+
facet_grid(Country~.)
theme_bw()
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 2)+
theme_bw()
View(data)
getimage=function(k){
fit=kmeans(data[,2:5],k)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
}
getimage(2)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
}
getimage(2)
getimage(2)
ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
getimage=function(k){
fit=kmeans(data[,2:5],k)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
}
getimage(2)
getimage=function(k){
fit=kmeans(data[,2:5],k)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
}
getimage(3)
View(data)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,
ncol = 2, nrow = 1)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(p1, p2, ncol = 1, nrow = 2,heights=c(1,3))
}
getimage(2)
install.packages("ggpubr")
#Задание 2
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
getimage=function(k){
fit=kmeans(data[,2:5],k)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
library(ggpubr)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,
ncol = 2, nrow = 1)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(p1, p2, ncol = 1, nrow = 2,heights=c(1,3))
}
getimage(2)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
library(ggpubr)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl3=ggplot(newdata, aes(x=GDP, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,pl3,
ncol = 3, nrow = 1)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(p1, p2, ncol = 1, nrow = 2,heights=c(1,3))
}
getimage(3)
#чтение данных и чистка
library(readxl)
datacrude =data.frame(read_excel("Таблица 1.xlsx"))
data=datacrude[5:nrow(datacrude),-c(1)]
colnames(data)=c("Country","Doctors","Deaths","GDP","Costs")
data[,2:5]=apply(data[,2:5],2,function(x)scale( as.numeric(x)))#тут переменные из текста преобразуются в числа и стандартизируются
data[,1]=factor(data[,1])
#задание 1
d = dist(data[,2:5], method = "euclidean")#матрица расстояний
fit <- hclust(d, method = "ward.D")
plot(fit, labels = data$Country,xlab = "Countries")
#Задание 2
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
getimage=function(k){
fit=kmeans(data[,2:5],k)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
library(ggpubr)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl3=ggplot(newdata, aes(x=GDP, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,pl3,
ncol = 3, nrow = 1)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(p1, p2, ncol = 1, nrow = 2,heights=c(1,3))
}
getimage(3)
#чтение данных и чистка
library(readxl)
datacrude =data.frame(read_excel("Таблица 1.xlsx"))
data=datacrude[5:nrow(datacrude),-c(1)]
colnames(data)=c("Country","Doctors","Deaths","GDP","Costs")
data[,2:5]=apply(data[,2:5],2,function(x)scale( as.numeric(x)))#тут переменные из текста преобразуются в числа и стандартизируются
data[,1]=factor(data[,1])
#задание 1
d = dist(data[,2:5], method = "euclidean")#матрица расстояний
fit <- hclust(d, method = "ward.D")
plot(fit, labels = data$Country,xlab = "Countries")
#Задание 2
it=1:8
sums=sapply(it, function(k) kmeans(data[,2:5], k)$tot.withinss)
plot(it,sums,type = "b",col="red")
getimage=function(k){
fit=kmeans(data[,2:5],k)
newdata=data
newdata$cluster=factor(fit$cluster)
library(ggplot2)
library(ggpubr)
pl1=ggplot(newdata, aes(x=Doctors, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl2=ggplot(newdata, aes(x=GDP, y=Costs, col = cluster))+
geom_point(size = 3)+
theme_bw()
pl3=ggplot(newdata, aes(x=GDP, y=Deaths, col = cluster))+
geom_point(size = 3)+
theme_bw()
costs = ggplot(newdata, aes(x=cluster, y=Costs))+
geom_boxplot()+
theme_bw()
deaths = ggplot(newdata, aes(x=cluster, y=Deaths))+
geom_boxplot()+
theme_bw()
doctors = ggplot(newdata, aes(x=cluster, y=Doctors))+
geom_boxplot()+
theme_bw()
gdp = ggplot(newdata, aes(x=cluster, y=GDP))+
geom_boxplot()+
theme_bw()
p1 <- ggarrange(pl1, pl2,pl3,
ncol = 3, nrow = 1)
p2 <- ggarrange(costs, deaths, doctors, gdp,
ncol = 2, nrow = 2)
ggarrange(p1, p2, ncol = 1, nrow = 2,heights=c(1,3))
}
getimage(2)
