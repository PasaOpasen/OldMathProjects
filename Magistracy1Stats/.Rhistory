data=y[tmp,]#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=abs(cormatrix[lower.tri(cormatrix)])
cat("Статистика по треугольнику корреляционной матрицы \n")
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
attitude[attitude$learning >= as.integer(head(sort(attitude$learning, decreasing = T),5)),]
which.max(rowSums(attitude[order(-attitude$learning)[1:5],c("complaints","raises","advance")]))
s=cut(quakes$mag)
s=cut(quakes$mag,6)
table(s)
table(cut(quakes$mag,5))
norm(43)
norm(matrix(1:45,nrow = 9))
.Primitive("sum")
.Primitive("norm")
.Internal(norm)
.Internal(norm(matrix(1:45,nrow = 9)))
.Internal("norm")
norm
#Задание 4
library(readxl)
data=data.frame(read_xlsx("РожьВсеГодаПустыхЛет.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])
ns=rownames(y)
#y=apply(y,2,function(s) ifelse(is.na(s),median(s,na.rm = T),s))
library(mice)
imp=mice(y,seed=11)
y=complete(imp,action = 1)
View(y)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
df=data.frame(x=x,y=y[,2])
View(y)
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
mt=lm(y~x,df,na.rm = TRUE)
summary(mt)
x=x[!is.na(df$y)]
res=mt$residuals[!is.na(df$y)]
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
library(corrplot)
nn=20
for(i in seq(length(x)-80,length(x)-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",x[tmp],"\n")
data=y[tmp,]#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=abs(cormatrix[lower.tri(cormatrix)])
cat("Статистика по треугольнику корреляционной матрицы \n")
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
library(readxl)
data=data.frame(read_xlsx("РожьВсеГода.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
library(readxl)
data=data.frame(read_xlsx("РожьВсеГода.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
View(data)
library(readxl)
data=data.frame(read_xlsx("РожьВсеГода.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])#транспонирование для удобства
#получить массив лет
ns=rownames(y)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
library(mice)#обработать пустые значения
imp=mice(y,seed=11)
y=complete(imp,action = 1)
df=data.frame(x=x,y=y[,2])#объединить данные в фрейм
print(df[sample(1:nrow(df),13),])
library(readxl)
data=data.frame(read_xlsx("РожьВсеГода.xlsx"))
data[,-1]=apply(data[,-1], 2, as.numeric)#перевести в числа все строки
y=t(data[,-1])#транспонирование для удобства
#получить массив лет
ns=rownames(y)
x=sapply(ns, function(s) as.numeric(substr(s,2,nchar(s))))
library(mice)#обработать пустые значения
imp=mice(y,seed=11)
y=complete(imp,action = 1)
df=data.frame(x=x,y=y[,1])#объединить данные в фрейм
print(df[sample(1:nrow(df),13),])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2,na.rm = TRUE)+
geom_smooth(method = lm,na.rm = TRUE)
mt=lm(y~x,df,na.rm = TRUE)
summary(mt)
x=x[!is.na(df$y)]
res=mt$residuals[!is.na(df$y)]
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
library(corrplot)
nn=20
for(i in seq(length(x)-80,length(x)-nn,nn)){
tmp=i:(i+nn-1)
cat("Times:",x[tmp],"\n")
data=y[tmp,]#транспонирование, чтобы строки стали переменными
cormatrix=cor(data)
lower=abs(cormatrix[lower.tri(cormatrix)])
cat("Статистика по треугольнику корреляционной матрицы \n")
print(summary(lower[lower!=0]))
corrplot(cormatrix)
}
print(df[sort(sample(1:nrow(df),13)),])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2)+
geom_smooth(method = lm)+
geom_smooth(se=F,col="red")
mt=lm(y~x,df)
summary(mt)
mt=lm(log(y)~x,df)
summary(mt)
mt=lm(log(y)~log(x),df)
summary(mt)
mt=lm(y~log(x),df)
summary(mt)
mt=lm(sqrt(y)~x,df)
summary(mt)
mt=lm(y~sqrt(x),df)
summary(mt)
mt=lm(sqrt(y)~sqrt(x),df)
summary(mt)
mt=lm(log(y)~sqrt(x),df)
summary(mt)
mt=lm(sqrt(y)~log(x),df)
summary(mt)
mt=lm(y~x^2,df)
summary(mt)
mt=lm(sqrt(log(y))~log(x),df)
summary(mt)
mt=lm(log(y)~log(x)+I(log(x)^2),df)
summary(mt)
library(readxl)
tab=data.frame(read_xlsx("Рожь18век.xlsx"))
View(tab)
library(readxl)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
View(tab)
library(readxl)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=as.character( tab[1,])
View(tab)
tab[1,]
library(readxl)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
tab[1,]
as.vector( tab[1,])
as.character( tab[1,])
sapply( tab[1,], function(s)as.character(s))
library(readxl)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=sapply( tab[1,], function(s)as.character(s))
View(tab)
library(readxl)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=sapply( tab[1,], as.character)#поставить правильные названия
tab=tab[-1,]#удалить строку с именами
tab$Year=sapply(rownames(tab),as.numeric)
View(tab)
library(readxl)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=sapply( tab[1,], as.character)#поставить правильные названия
tab=tab[-1,]#удалить строку с именами
head(tab,10)
mean(tab[,1:2],na.rm = T)
aggregate(tab,mean)
rowMeans(tab[,-Year],na.rm = T)
tab$Year=sapply(rownames(tab),as.numeric)
rowMeans(tab[,-"Year"],na.rm = T)
rowMeans(tab[,-c("Year")],na.rm = T)
rowMeans(tab[,-ncol(tab)],na.rm = T)
View(tab)
library(readxl)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=sapply( tab[1,], as.character)#поставить правильные названия
tab=tab[-1,]#удалить строку с именами
tab=apply(tab, 2, as.numeric)#факторы перевести в числа
head(tab,10)
tab$Year=sapply(rownames(tab),as.numeric)
View(tab)
library(readxl)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=sapply( tab[1,], as.character)#поставить правильные названия
tab=tab[-1,]#удалить строку с именами
View(tab)
tab=sapply(tab, as.numeric)#факторы перевести в числа
View(tab)
library(readxl)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=sapply( tab[1,], as.character)#поставить правильные названия
tab=tab[-1,]#удалить строку с именами
tab=data.frame(Year=sapply(rownames(tab),as.numeric),tab)
tab=sapply(tab, as.numeric)#факторы перевести в числа
head(tab,10)
library(readxl)
library(dplyr)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=sapply( tab[1,], as.character)#поставить правильные названия
tab=tab[-1,]#удалить строку с именами
tab=data.frame(Year=sapply(rownames(tab),as.numeric),tab)
tab=sapply(tab, as.numeric)#факторы перевести в числа
head(as_data_frame(tab),10)
rowMeans(tab[,-ncol(tab)],na.rm = T)
means=list(rowMeans(tab[,-ncol(tab)],na.rm = T))
means=list(rowMeans(tab[,-ncol(tab)],na.rm = T))
for(i in 1:((ncol(tab)-1)/2)){
means[i+1]=rowMeans(tab[c(i,i+1),-ncol(tab)],na.rm = T)
}
View(means)
means=list(rowMeans(tab[,-ncol(tab)],na.rm = T))
for(i in 1:((ncol(tab)-1)/2)){
means[i+1]=rowMeans(tab[,c(i,i+1,-ncol(tab))],na.rm = T)
}
tmptab=tab[,-ncol(tab)]
means=list(rowMeans(tmptab,na.rm = T))
for(i in 1:((ncol(tab)-1)/2)){
means[i+1]=rowMeans(tmptab[,c(i,i+1))],na.rm = T)
}
tmptab=tab[,-ncol(tab)]
means=list(rowMeans(tmptab,na.rm = T))
for(i in 1:((ncol(tab)-1)/2)){
means[i+1]=rowMeans(tmptab[,c(i,i+1)],na.rm = T)
}
View(means)
View(tmptab)
tmptab=tab[,-1]
means=list(rowMeans(tmptab,na.rm = T))
for(i in 1:((ncol(tab)-1)/2)){
means[i+1]=rowMeans(tmptab[,c(i,i+1)],na.rm = T)
}
View(means)
tmptab[,c(1,2)]
rowMeans(tmptab[,c(1,2)])
tmptab=tab[,-1]
means=list(rowMeans(tmptab,na.rm = T))
for(i in 1:((ncol(tab)-1)/2)){
means[[i+1]]=rowMeans(tmptab[,c(i,i+1)],na.rm = T)
}
View(means)
View(means)
means=data.frame(means, names=c("","","","","","","","","",""))
means=data.frame(means, names=c("ПоСтране","Район1","Район2","Район3","Район4","Район5","Район7","Район8","Район9"))
means=data.frame(means, names=c("ПоСтране","Район1","Район2","Район3","Район4","Район5","Район6","Район7","Район8","Район9"))
means=data.frame(means, labels=c("ПоСтране","Район1","Район2","Район3","Район4","Район5","Район6","Район7","Район8","Район9"))
means=data.frame(means)
View(means)
means=data.frame(tab[,1],means)
names(means)=c("Год","ПоСтране","Район1","Район2","Район3","Район4","Район5","Район6","Район7","Район8","Район9")
View(means)
means=data.frame(tab[,1],means)
names(means)=c("Год","ПоСтране","Район1","Район2","Район3","Район4","Район5","Район6","Район7","Район8","Район9")
means[ is.nan(means)]=NA
library(readxl)
library(dplyr)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=sapply( tab[1,], as.character)#поставить правильные названия
tab=tab[-1,]#удалить строку с именами
tab=data.frame(Year=sapply(rownames(tab),as.numeric),tab)
tab=sapply(tab, as.numeric)#факторы перевести в числа
head(as_data_frame(tab),10)
tmptab=tab[,-1]
means=list(rowMeans(tmptab,na.rm = T))
for(i in 1:((ncol(tab)-1)/2)){
means[[i+1]]=rowMeans(tmptab[,c(i,i+1)],na.rm = T)
}
means[is.nan(means)]=NA
means=sapply(means,function(col)sapply(col, function(row) ifelse(is.nan(row),NA,row)))
View(means)
library(ggplot2)
ggplot(means,aes(x=Год,y=ПоСтране))+
geom_line()
library(readxl)
library(dplyr)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=sapply( tab[1,], as.character)#поставить правильные названия
tab=tab[-1,]#удалить строку с именами
tab=data.frame(Year=sapply(rownames(tab),as.numeric),tab)
tab=sapply(tab, as.numeric)#факторы перевести в числа
head(as_data_frame(tab),10)
tmptab=tab[,-1]
means=list(rowMeans(tmptab,na.rm = T))
for(i in 1:((ncol(tab)-1)/2)){
means[[i+1]]=rowMeans(tmptab[,c(i,i+1)],na.rm = T)
}
means=sapply(means,function(col)sapply(col, function(row) ifelse(is.nan(row),NA,row)))#Заменить все NaN на NA
means=data.frame(tab[,1],means)
names(means)=c("Год","ПоСтране","Район1","Район2","Район3","Район4","Район5","Район6","Район7","Район8","Район9")
library(ggplot2)
ggplot(means,aes(x=Год,y=ПоСтране))+
geom_line()
library(ggplot2)
ggplot(means,aes(x=Год,y=ПоСтране))+
geom_line(width=2)
library(ggplot2)
ggplot(means,aes(x=Год,y=ПоСтране))+
geom_line(size=2)
library(ggplot2)
ggplot(means,aes(x=Год,y=ПоСтране))+
geom_line(size=1)
head(means)
library(ggplot2)
ggplot(means,aes(x=Год,y=ПоСтране))+
geom_line(size=1)+
for(i in 1:9)
geom_line(aes(y=as.symbol(names(means)[i+1])),size=1)
as.symbol(names(means)[2])
library(ggplot2)
ggplot(means,aes(x=Год))+
geom_line(aes(y=ПоСтране),size=1)+
for(i in 1:9)
geom_line(aes(y=as.symbol(names(means)[i+1])),size=1)+
library(ggplot2)
ggplot(means,aes(x=Год))+
geom_line(aes(y=ПоСтране),size=1)+
for(i in 1:9)geom_line(aes(y=as.symbol(names(means)[i+1])),size=1)+
library(ggplot2)
ggplot(means,aes(x=Год))+
geom_line(aes(y=ПоСтране),size=1)+
for(i in 1:8) geom_line(aes(y=as.symbol(names(means)[i+1])),size=1)+
geom_line(aes(y=as.symbol(names(means)[11])),size=1)
library(ggplot2)
ggplot(means,aes(x=Год))+
geom_line(aes(y=ПоСтране),size=1)+
#for(i in 1:8) geom_line(aes(y=as.symbol(names(means)[i+1])),size=1)+
geom_line(aes(y=as.symbol(names(means)[11])),size=1)
library(ggplot2)
ggplot(means,aes(x=Год))+
geom_line(aes(y=ПоСтране),size=1)+
#for(i in 1:8) geom_line(aes(y=as.symbol(names(means)[i+1])),size=1)+
geom_line(aes(y=Район9),size=1)
library(ggplot2)
ggplot(means,aes(x=Год))+
geom_line(aes(y=ПоСтране),size=1)+
geom_line(aes(y=Район9),size=1,col=11)
library(ggplot2)
ggplot(means,aes(x=Год))+
geom_line(aes(y=ПоСтране),size=1)+
geom_line(aes(y=Район1),size=1,col=3)+
geom_line(aes(y=Район2),size=1,col=4)+
geom_line(aes(y=Район3),size=1,col=5)+
geom_line(aes(y=Район4),size=1,col=6)+
geom_line(aes(y=Район5),size=1,col=7)+
geom_line(aes(y=Район6),size=1,col=8)+
geom_line(aes(y=Район7),size=1,col=9)+
geom_line(aes(y=Район8),size=1,col=10)+
geom_line(aes(y=Район9),size=1,col=11)
library(ggplot2)
ggplot(means,aes(x=Год))+
geom_line(aes(y=ПоСтране),size=1)+
geom_line(aes(y=Район1),size=1,col=2)+
geom_line(aes(y=Район2),size=1,col=3)+
geom_line(aes(y=Район3),size=1,col=5)+
geom_line(aes(y=Район4),size=1,col=6)+
geom_line(aes(y=Район5),size=1,col=7)+
geom_line(aes(y=Район6),size=1,col=8)+
geom_line(aes(y=Район7),size=1,col=9)+
geom_line(aes(y=Район8),size=1,col=10)+
geom_line(aes(y=Район9),size=1,col=11)
means=sapply(means,function(col)sapply(col, function(row) ifelse(is.nan(row),NA,row)))#Заменить все NaN на NA
means=data.frame(tab[,1],means)
names(means)=c("Год","ПоСтране","Район1","Район2","Район3","Район4","Район5","Район6","Район7","Район8","Район9")
head(means)
library(ggplot2)
p1=  ggplot(means,aes(x=Год))+
geom_line(aes(y=ПоСтране),size=1)
p2=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район1),size=1,col=2)
p3=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район2),size=1,col=3)
p4=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район3),size=1,col=5)
p5=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район4),size=1,col=6)
p6= ggplot(means,aes(x=Год))+
geom_line(aes(y=Район5),size=1,col=7)
p7= ggplot(means,aes(x=Год))+
geom_line(aes(y=Район6),size=1,col=8)
p8=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район7),size=1,col=9)
p9=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район8),size=1,col=10)
p10=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район9),size=1,col=11)
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,nrow=11)
library(ggpubr)
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,nrow=11)
library(ggpubr)
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,nrow=10)
ggplot(means,aes(x=Год))+
geom_line(aes(y=ПоСтране),size=1)
means=sapply(means,function(col)sapply(col, function(row) ifelse(is.nan(row),NA,row)))#Заменить все NaN на NA
means=data.frame(tab[,1],means)
names(means)=c("Год","ПоСтране","Район1","Район2","Район3","Район4","Район5","Район6","Район7","Район8","Район9")
head(means)
library(readxl)
library(dplyr)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=sapply( tab[1,], as.character)#поставить правильные названия
tab=tab[-1,]#удалить строку с именами
tab=data.frame(Year=sapply(rownames(tab),as.numeric),tab)
tab=sapply(tab, as.numeric)#факторы перевести в числа
head(as_data_frame(tab),10)
tmptab=tab[,-1]
means=list(rowMeans(tmptab,na.rm = T))
for(i in 1:((ncol(tab)-1)/2)){
means[[i+1]]=rowMeans(tmptab[,c(i,i+1)],na.rm = T)
}
View(means)
means=sapply(means,function(col)sapply(col, function(row) ifelse(is.nan(row),NA,row)))#Заменить все NaN на NA
means
View(tab)
means=data.frame(tab[,1],means)
View(means)
names(means)=c("Год","ПоСтране","Район1","Район2","Район3","Район4","Район5","Район6","Район7","Район8","Район9")
head(means)
library(ggplot2)
p1=  ggplot(means,aes(x=Год))+
geom_line(aes(y=ПоСтране),size=1)
p2=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район1),size=1,col=2)
p3=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район2),size=1,col=3)
p4=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район3),size=1,col=5)
p5=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район4),size=1,col=6)
p6= ggplot(means,aes(x=Год))+
geom_line(aes(y=Район5),size=1,col=7)
p7= ggplot(means,aes(x=Год))+
geom_line(aes(y=Район6),size=1,col=8)
p8=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район7),size=1,col=9)
p9=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район8),size=1,col=10)
p10=  ggplot(means,aes(x=Год))+
geom_line(aes(y=Район9),size=1,col=11)
library(ggpubr)
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,nrow=10)
library(ggpubr)
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,nrow=5)
library(ggpubr)
ggarrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,nrow=5,ncol=2)
summary(means)
library(ggplot2)
yt=c(1133+ p1,	1222,	1354+ p1,	1389,	1342+ p2,	1377,	1491,	1684+ p2)
data=data.frame(time=1:length(yt),values=yt)
plot(data,type="b")
library(ggplot2)
yt=c(1133+ p1,	1222,	1354+ p1,	1389,	1342+ p2,	1377,	1491,	1684+ p2)
data=data.frame(time=1:length(yt),values=yt)
plot(data,type="b")
yt=c(1133+ p1,	1222,	1354+ p1,	1389,	1342+ p2,	1377,	1491,	1684+ p2)
yt
t.test(means[,1],price1)
#Вариант 7
p1 = nchar("Дмитрий")
p2 = nchar("Пасько")
#Задание 1
library(readxl)
library(dplyr)
tab=data.frame(t(read_xlsx("Рожь18век.xlsx")))
names(tab)=sapply( tab[1,], as.character)#поставить правильные названия
tab=tab[-1,]#удалить строку с именами
tab=data.frame(Year=sapply(rownames(tab),as.numeric),tab)
tab=sapply(tab, as.numeric)#факторы перевести в числа
head(as_data_frame(tab),10)
tmptab=tab[,-1]
means=list(rowMeans(tmptab,na.rm = T))
for(i in 1:((ncol(tab)-1)/2)){
means[[i+1]]=rowMeans(tmptab[,c(i,i+1)],na.rm = T)
}
means=sapply(means,function(col)sapply(col, function(row) ifelse(is.nan(row),NA,row)))#Заменить все NaN на NA
means=data.frame(tab[,1],means)
names(means)=c("Год","ПоСтране","Район1","Район2","Район3","Район4","Район5","Район6","Район7","Район8","Район9")
head(means)
price1 = c(
40 + p1,43 + p1,40,80,
74,40 + p2,55 + p2,42 + p2,
42,50,40 + p2,43,43,
35 + p1,40 + p1,30,36 + p1,
50,30 + p1,29,45 + p1,
40,42,40,36,
50,30 + p1,24 + p2,
25 + p2,40,32 + p1,
30,20,30,25,32 + p2
)
summary(price1)#минимальные характеристики
t.test(price1)#тест Стьюдента для среднего
t.test(means[,1],price1)
t.test(means[,2],price1)
