spanlist=c(0.1,0.15,0.2,0.5,1.0)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
n=1000
x=seq(1770,2050,length.out = n)
y=rchisq(n,14)
#скользящее среднее
spanlist=c(0.1,0.15,0.2,0.5,1.0)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n")
n=1000
x=seq(1770,2050,length.out = n)
y=rchisq(n,14)
#скользящее среднее
spanlist=c(0.1,0.15,0.2,0.5,1.0)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
n=1000
x=seq(1770,2050,length.out = n)
y=rchisq(n,14)
#скользящее среднее
spanlist=c(0.05,0.1,0.15,0.2,0.5)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
n=1000
x=seq(1770,2050,length.out = n)
y=rchisq(n,14)
#скользящее среднее
spanlist=c(0.03,0.1,0.15,0.2,0.5)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(0.03,0.1,0.15,0.2,0.5)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(ksmooth(x,y,"normal", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", spanlist)),col=1:length(bandlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(5,10,15,20)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(ksmooth(x,y,"normal", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", spanlist)),col=1:length(bandlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(5,10,15,20)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(ksmooth(x,y,"normal", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", bandlist)),col=1:length(bandlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(2,5,10,15,20)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(ksmooth(x,y,"normal", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", bandlist)),col=1:length(bandlist),bty="n",lwd=2)
#скользящее среднее
spanlist=c(0.03,0.1,0.15,0.2,0.5)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(2,5,10,15,20)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(ksmooth(x,y,"box", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", bandlist)),col=1:length(bandlist),bty="n",lwd=2)
#сплайны
sparlist=c(0.2,0.5,0.6,0.9,1.4)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y,"normal", spar = sparlist[i]),col=i,lwd=2)
}
lines(smooth.spline(x,y,"normal", cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
#сплайны
sparlist=c(0.2,0.5,0.6,0.9,1.4)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
y=read.table("ArrayE.txt")
View(y)
y=read.table("ArrayE.txt")
y=y[[1]]
y=y[seq(1,length(y),by=8)]
#скользящее среднее
spanlist=c(0.03,0.1,0.15,0.2,0.5)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
y=read.table("ArrayE.txt")
y=y[[1]]
y=y[seq(1,length(y),by=8)]
x=1:length(y)
#скользящее среднее
spanlist=c(0.03,0.1,0.15,0.2,0.5)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
#скользящее среднее
spanlist=c(0.01,0.1,0.15,0.2,0.5)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
#скользящее среднее
spanlist=c(0.01,0.05,0.15,0.2)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
#скользящее среднее
spanlist=c(0.01,0.02,0.03)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
#скользящее среднее
spanlist=c(0.01,0.015,0.02)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(y~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(2,5,10,15,20)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
lines(ksmooth(x,y,"normal", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", bandlist)),col=1:length(bandlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(2,5)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
lines(ksmooth(x,y,"normal", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", bandlist)),col=1:length(bandlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(0.2,0.5)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
lines(ksmooth(x,y,"normal", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", bandlist)),col=1:length(bandlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(0.02,0.05)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
lines(ksmooth(x,y,"normal", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", bandlist)),col=1:length(bandlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(0.0002,0.005)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
lines(ksmooth(x,y,"normal", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", bandlist)),col=1:length(bandlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(0.0002,50)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
lines(ksmooth(x,y,"normal", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", bandlist)),col=1:length(bandlist),bty="n",lwd=2)
#ядерное сглаживание
bandlist=c(80,120,160)
plot(x,y,type="l",col="grey")
for(i in 1:length(spanlist)){
lines(ksmooth(x,y,"normal", bandwidth = bandlist[i]),col=i,lwd=2)
}
legend("topleft",c(paste("band =", bandlist)),col=1:length(bandlist),bty="n",lwd=2)
#сплайны
sparlist=c(0.2,0.9,1.4)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
#сплайны
sparlist=c(0.2,0.7,1.2)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
#сплайны
sparlist=c(1.1,0.7,0.2)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
#сплайны
sparlist=c(1.1,0.8,0.3)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
#сплайны
sparlist=c(1.1,1.05,0.3)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
#сплайны
sparlist=c(0.3,0.4,0.5)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
#сплайны
sparlist=c(0.42,0.45,0.5)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
#сплайны
sparlist=c(0.42,0.45,0.5)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
#lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
smooth.spline(x,y, cv=TRUE)
#сплайны
sparlist=c(-0.42,-0.3,-0.13)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
#lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
#сплайны
sparlist=c(-0.42,-0.02,-0.13)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
#lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
#сплайны
sparlist=c(-0.13)
plot(x,y,type="l",col="grey")
for(i in 1:length(sparlist)){
lines(smooth.spline(x,y, spar = sparlist[i]),col=i,lwd=2)
}
#lines(smooth.spline(x,y, cv=TRUE),col=i,lwd=2)
legend("topleft",c(paste("spar =", sparlist)),col=1:length(sparlist),bty="n",lwd=2)
y=read.table("ArrayE.txt")
y=y[[1]]
y=y[seq(1,length(y),by=8)]
x=1:length(y)
y
n=150
x=1:150
y=matrix(rnorm(n*6,150,50),nrow=6)
library(ggplot2)
ggplot(data.frame(x=x,y=y[1,]),aes(x=x,y=y))+
geom_line()+
geom_point(size=2)+
geom_smooth(method = lm)
n=150
x=1:150
y=matrix(rnorm(n*6,150,50),nrow=6)
library(ggplot2)
ggplot(data.frame(x=x,y=y[1,]),aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2)+
geom_smooth(method = lm)
n=150
x=1:150
y=matrix(rnorm(n*6,150,50),nrow=6)
df=data.frame(x=x,y=y[1,])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2)+
geom_smooth(method = lm)
(mt=lm(y~x,df))
res=mt$residuals
#скользящее среднее
spanlist=c(0.01,0.015,0.02)
plot(x,res,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(res~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
res=mt$residuals
#скользящее среднее
spanlist=c(0.1,0.15,0.2)
plot(x,res,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=loess(res~x,span=spanlist[i])
lines(x,predict(ls),col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
install.packages('caTools')
res=mt$residuals
#скользящее среднее
library(caTools)
spanlist=c(0.1,0.15,0.2)
plot(x,res,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=runmean(res)
lines(x,ls,col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
res=mt$residuals
#скользящее среднее
library(caTools)
spanlist=c(0.1,0.15,0.2)
plot(x,res,type="l",col="grey")
for(i in 1:length(spanlist)){
ls=runmean(res,2+i)
lines(x,ls,col=i,lwd=2)
}
legend("topleft",c(paste("span =", spanlist)),col=1:length(spanlist),bty="n",lwd=2)
res=mt$residuals
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
res=mt$residuals
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
mt=lm(y~x,df)
summary(mt)
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
data=y[,i:(i+nn)]
corrplot(cor(data))
}
library(corrplot)
nn=15
for(i in seq(1,n-nn,nn)){
data=y[,i:(i+nn-1)]
corrplot(cor(data))
}
library(corrplot)
nn=15
for(i in seq(1,n-nn,nn)){
data=t(y[,i:(i+nn-1)])
corrplot(cor(data))
}
#Задание 4
n=150
x=1:150
y=matrix(rnorm(n*8,150,50),nrow=8)
df=data.frame(x=x,y=y[1,])
library(ggplot2)
ggplot(df,aes(x=x,y=y))+
geom_line(col="green")+
geom_point(size=2)+
geom_smooth(method = lm)
mt=lm(y~x,df)
summary(mt)
res=mt$residuals
#скользящее среднее
library(caTools)
k=c(3,5,9)
plot(x,res,type="l",col="grey")
for(i in 1:length(k)){
lines(x,runmean(res,k[i]),col=i,lwd=2)
}
legend("topleft",c(paste("k =", k)),col=1:length(k),bty="n",lwd=2)
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
data=t(y[,i:(i+nn-1)])
corrplot(cor(data))
}
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
data=t(y[,i:(i+nn-1)])
corrplot(cor(data),method = "shade")
}
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
data=t(y[,i:(i+nn-1)])
corrplot(cor(data),method = "number")
}
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
data=t(y[,i:(i+nn-1)])
corrplot(cor(data),method = "pie")
}
library(corrplot)
nn=20
for(i in seq(1,n-nn,nn)){
cat("Times:",x[i:(i+nn-1)],"\n")
data=t(y[,i:(i+nn-1)])
corrplot(cor(data))
}
#Вариант 7
p1 = nchar("Дмитрий")
p2 = nchar("Пасько")
#Задание 1
price1 = c(
40 + p1,43 + p1,40,80,
74,40 + p2,55 + p2,42 + p2,
42,50,40 + p2,43,43,
35 + p1,40 + p1,30,36 + p1,
50,30 + p1,29,45 + p1,
40,42,40,36,
50,30 + p1,24 + p2,
25 + p2,40,32 + p1,
30,20,30,25,32 + p2
)
summary(price1)#минимальные характеристики
t.test(price1)#тест Стьюдента для среднего
vart=sd(price1)/mean(price1)*100
print(paste("Коэффициент вариации равен",vart,"%"))
cat("Коэффициент вариации равен",vart,"%")
cat("Коэффициент вариации равен",vart,"%")
bartlett.test(price1)
#Вариант 7
p1 = nchar("Дмитрий")
p2 = nchar("Пасько")
#Задание 1
price1 = c(
40 + p1,43 + p1,40,80,
74,40 + p2,55 + p2,42 + p2,
42,50,40 + p2,43,43,
35 + p1,40 + p1,30,36 + p1,
50,30 + p1,29,45 + p1,
40,42,40,36,
50,30 + p1,24 + p2,
25 + p2,40,32 + p1,
30,20,30,25,32 + p2
)
summary(price1)#минимальные характеристики
t.test(price1)#тест Стьюдента для среднего
vart=sd(price1)/mean(price1)*100
cat("Коэффициент вариации равен",vart,"%\n")
#так как коэффициент вариации < 30%, выборка достаточно однородная
bartlett.test(price1)
